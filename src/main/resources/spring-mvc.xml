<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
                        http://www.springframework.org/schema/mvc   
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	default-lazy-init="true">

	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 <mvc:annotation-driven/>相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean， 
		配置一些messageconverter。即解决了@Controller注解的使用前提配置。 -->
	<mvc:annotation-driven />

	<!-- 通过component-scan 让Spring扫描com.sm.controller下的所有的类，让Spring的代码注解生效 -->
	<context:component-scan base-package="com.vnet">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	<!--filter标签的type可以为： annotation、assignable、aspectj、regex、custom -->

	<!-- Default ViewResolver -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- 对静态资源文件的访问 方案二 （二选一） -->
	<mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/> 
	<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/> 
	<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>
	<mvc:resources mapping="/resource/**" location="/resource/" cache-period="31556926"/>

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>apolication/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>
	
	<!--bean id="hlInterceptor" class="com.sm.interceptor.HlInterceptor"/>
	<bean id="sedInterceptor" class="com.sm.interceptor.SedInterceptor"/-->
	<!-- 如果使用了<mvc:annotation-driven />， 它会自动注册DefaultAnnotationHandlerMapping 与  
	AnnotationMethodHandlerAdapter 这两个bean,所以就没有机会再给它注入interceptors属性，就无法指定拦截器。
	
	（近似）总拦截器，拦截所有url
	<mvc:interceptors>
	    <bean class="com.app.mvc.MyInteceptor" />
	</mvc:interceptors>
	
	（近似） 总拦截器， 拦截匹配的URL。
	<mvc:interceptors >  
	  <mvc:interceptor>  
	        <mvc:mapping path="/user/*" />
	        <bean class="com.mvc.MyInteceptor"></bean>  
	    </mvc:interceptor>  
	</mvc:interceptors>  
	-->
	<!-- HandlerMapping 新增拦截器 
    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
        <property name="interceptors">
            <list>
               <ref bean="hlInterceptor"/>
               <ref bean="sedInterceptor"/>
            </list>
        </property>
    </bean> -->
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/ingnore-user/*"/>
    		<bean class="com.vnet.interceptor.HlInterceptor" />
    	</mvc:interceptor>
    	<mvc:interceptor>
    		<mvc:mapping path="/ingnore-center/*"/>
    		<bean class="com.vnet.interceptor.SedInterceptor" />
    	</mvc:interceptor>
	</mvc:interceptors>

    <!-- 对静态资源文件的访问  方案二 （二选一）-->  
    <!--mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/-->

</beans>